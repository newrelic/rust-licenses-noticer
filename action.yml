name: "Rust Licenses Noticer"
description: >
  Retrieves dependency metadata of your Rust project with `cargo-deny`,
  generates a `THIRD_PARTY_NOTICES.md` file from a provided template and
  compares it with yours, failing if they are not the same.
inputs:
  project-root: # id of input
    description: "The root directory of the project to check"
    required: false
    default: ${{ github.workspace }}
  template-file-path:
    description: "The path to the template file to use"
    required: true
  notices-file:
    description: "The path to the notices file"
    required: false
    default: "THIRD_PARTY_NOTICES.md"
  rust-licenses-noticer-branch:
    description: "The branch to use for the rust-licenses-noticer tool"
    required: false
    default: "main"

runs:
  using: "composite"
  steps:
    - name: Install Rust stable
      uses: dtolnay/rust-toolchain@1.85.0

    - name: Install cargo-deny
      run: >
        cargo install cargo-deny
        --quiet --locked
      shell: bash

    - name: Retrieve dependencies with cargo deny
      run: >
        echo "LICENSES=$(
        cargo deny --all-features
        --log-level off
        --manifest-path ${{ inputs.project-root }}/Cargo.toml
        list -l crate -f json
        )" >> $GITHUB_ENV
      shell: bash

    - name: Install rust-licenses-noticer
      run: >
        cargo install
        --git https://github.com/newrelic/rust-licenses-noticer.git
        --branch ${{ inputs.rust-licenses-noticer-branch }}
        --quiet --locked
      shell: bash

    - name: Perform the third party licenses check
      run: >
        rust-licenses-noticer
        --dependencies "$LICENSES"
        --output-file "${{ inputs.notices-file }}"
        --template-path "${{ inputs.template-file-path }}"
      shell: bash

    - name: Check if the notices file was up to date
      run: |
        STATUS=$(git status --porcelain --untracked-files=all -- ${{ inputs.notices-file }})

        if [[ "$STATUS" =~ ^"??" ]]; then
          echo "::error file=${{ inputs.notices-file }},title=untracked-file::Notices file was created. Please run rust-licenses-noticer locally and commit the changes."
          echo "::group::Notices file contents"
          git diff -- ${{ inputs.notices-file }}
          echo "::endgroup::"
          exit 1
        elif [[ "$STATUS" =~ ^" M" ]]; then
          echo "::error file=${{ inputs.notices-file }},title=modified-file::Notices file was modified. Please run rust-licenses-noticer locally and commit the changes."
          echo "::group::Notices file diff"
          git diff -- ${{ inputs.notices-file }}
          echo "::endgroup::"
          exit 1
        else
          echo "Third party notices up to date."
        fi
      shell: bash
